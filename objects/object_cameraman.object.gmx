<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_cameraman</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = CURSOR_DEPTH+9;
unique();

windowScale = array(1,1);
cameraAnchored = false;
cameraMoveHand = array(0,0);
centered = false;

screenShakeAmount = 0;
screenShakeForce = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (notAGameRoom(room)){
    exit;
}
if (!object_game.paused &amp;&amp; object_game.inGame){
    var gw = gameWindowSize();
    windowScale = array(gw[0]/view_wview[view_current], gw[1]/view_hview[view_current]);



    var zoomAmnt = view_hview[view_current]/240;
    var margin = 20;
    var offDir = offScreenDirection(global.i[I_X], global.i[I_Y], margin);
    if (!getSetting("borderScroll")){
        offDir = array(0,0);
    }
    var horizontalDisplacement = clamp((global.i[I_RIGHT] - global.i[I_LEFT] + (offDir[0])) , -1, 1) ;
    var verticalDisplacement = clamp((global.i[I_DOWN] - global.i[I_UP] + (offDir[1])) , -1, 1);
    
    view_xview[view_current] += horizontalDisplacement*200*(1/room_speed)*zoomAmnt;
    view_yview[view_current] += verticalDisplacement*200*(1/room_speed)*zoomAmnt;

    if (instance_exists(object_pad)){
        if (global.i[I_ANCHOR_CAMERA_PRESSED]){
            cameraMoveHand = array(
                global.i[I_X]-view_xview, 
                global.i[I_Y]-view_yview
            );
        }
        if (global.i[I_ANCHOR_CAMERA]){
            cameraAnchored = true;
            view_xview -= object_pad.mouseShift[0];
            view_yview -= object_pad.mouseShift[1];
        }
        else{
            cameraAnchored = false;
        }
     }
     
     if (!centered &amp;&amp; instance_exists(object_game.firstBuilding)){
        centerCameraOn(object_game.firstBuilding);
        centered = true;
     }
     
     if (global.i[I_CENTER_CAMERA] &amp;&amp; instance_exists(object_building_parent)){
        centerCameraOn(object_building_parent); // Center camera on any building
     }
     
     if (screenShakeAmount &gt; 0){
        screenShakeAmount -= 1/room_speed;
        var dir = irandom(360);
        view_xview += lengthdir_x(screenShakeAmount, dir)*screenShakeForce;
        view_yview += lengthdir_y(screenShakeAmount, dir)*screenShakeForce;
     }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>centered = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
